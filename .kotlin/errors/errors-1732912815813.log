kotlin version: 2.0.0
error message: org.jetbrains.kotlin.backend.common.BackendException: Backend Internal error: Exception during IR lowering
File being compiled: E:/Trabajos/Personal/Android/test/pichincha/android/recetario/core/domain/src/main/java/pe/com/master/machines/domain/remote/GetRecipesAllUsesCase.kt:10:5
The root cause org.jetbrains.kotlin.util.SourceCodeAnalysisException was thrown at: org.jetbrains.kotlin.util.AnalysisExceptionsKt.wrapIntoSourceCodeAnalysisExceptionIfNeeded(AnalysisExceptions.kt:27)
	at org.jetbrains.kotlin.backend.common.CodegenUtil.reportBackendException(CodegenUtil.kt:253)
	at org.jetbrains.kotlin.backend.common.CodegenUtil.reportBackendException$default(CodegenUtil.kt:236)
	at org.jetbrains.kotlin.backend.common.phaser.PerformByIrFilePhase.invokeSequential(performByIrFile.kt:65)
	at org.jetbrains.kotlin.backend.common.phaser.PerformByIrFilePhase.invoke(performByIrFile.kt:52)
	at org.jetbrains.kotlin.backend.common.phaser.PerformByIrFilePhase.invoke(performByIrFile.kt:38)
	at org.jetbrains.kotlin.backend.common.phaser.NamedCompilerPhase.phaseBody(CompilerPhase.kt:166)
	at org.jetbrains.kotlin.backend.common.phaser.AbstractNamedCompilerPhase.invoke(CompilerPhase.kt:113)
	at org.jetbrains.kotlin.backend.common.phaser.CompositePhase.invoke(PhaseBuilders.kt:29)
	at org.jetbrains.kotlin.backend.common.phaser.CompositePhase.invoke(PhaseBuilders.kt:16)
	at org.jetbrains.kotlin.backend.common.phaser.NamedCompilerPhase.phaseBody(CompilerPhase.kt:166)
	at org.jetbrains.kotlin.backend.common.phaser.AbstractNamedCompilerPhase.invoke(CompilerPhase.kt:113)
	at org.jetbrains.kotlin.backend.common.phaser.CompilerPhaseKt.invokeToplevel(CompilerPhase.kt:62)
	at org.jetbrains.kotlin.backend.jvm.JvmIrCodegenFactory.invokeCodegen(JvmIrCodegenFactory.kt:371)
	at org.jetbrains.kotlin.codegen.CodegenFactory.generateModule(CodegenFactory.kt:47)
	at org.jetbrains.kotlin.backend.jvm.JvmIrCodegenFactory.generateModuleInFrontendIRMode(JvmIrCodegenFactory.kt:433)
	at org.jetbrains.kotlin.cli.jvm.compiler.pipeline.JvmCompilerPipelineKt.generateCodeFromIr(jvmCompilerPipeline.kt:241)
	at org.jetbrains.kotlin.cli.jvm.compiler.pipeline.JvmCompilerPipelineKt.compileModulesUsingFrontendIrAndLightTree(jvmCompilerPipeline.kt:140)
	at org.jetbrains.kotlin.cli.jvm.K2JVMCompiler.doExecute(K2JVMCompiler.kt:155)
	at org.jetbrains.kotlin.cli.jvm.K2JVMCompiler.doExecute(K2JVMCompiler.kt:50)
	at org.jetbrains.kotlin.cli.common.CLICompiler.execImpl(CLICompiler.kt:104)
	at org.jetbrains.kotlin.cli.common.CLICompiler.execImpl(CLICompiler.kt:48)
	at org.jetbrains.kotlin.cli.common.CLITool.exec(CLITool.kt:101)
	at org.jetbrains.kotlin.incremental.IncrementalJvmCompilerRunner.runCompiler(IncrementalJvmCompilerRunner.kt:453)
	at org.jetbrains.kotlin.incremental.IncrementalJvmCompilerRunner.runCompiler(IncrementalJvmCompilerRunner.kt:62)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.doCompile(IncrementalCompilerRunner.kt:506)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.compileImpl(IncrementalCompilerRunner.kt:423)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.compileNonIncrementally(IncrementalCompilerRunner.kt:301)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.compile(IncrementalCompilerRunner.kt:129)
	at org.jetbrains.kotlin.daemon.CompileServiceImplBase.execIncrementalCompiler(CompileServiceImpl.kt:676)
	at org.jetbrains.kotlin.daemon.CompileServiceImplBase.access$execIncrementalCompiler(CompileServiceImpl.kt:92)
	at org.jetbrains.kotlin.daemon.CompileServiceImpl.compile(CompileServiceImpl.kt:1661)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(Unknown Source)
	at java.rmi/sun.rmi.transport.Transport$1.run(Unknown Source)
	at java.rmi/sun.rmi.transport.Transport$1.run(Unknown Source)
	at java.base/java.security.AccessController.doPrivileged(Unknown Source)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Unknown Source)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(Unknown Source)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(Unknown Source)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(Unknown Source)
	at java.base/java.security.AccessController.doPrivileged(Unknown Source)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.base/java.lang.Thread.run(Unknown Source)
Caused by: org.jetbrains.kotlin.util.SourceCodeAnalysisException: java.lang.IllegalStateException: Cannot serialize error type: ERROR CLASS: Inconsistent type: pe/com/master/machines/constants/http/Resource<kotlin/collections/List<pe/com/master/machines/model/model/Recipe>> (parameters.size = 0, arguments.size = 1)
	at org.jetbrains.kotlin.util.AnalysisExceptionsKt.wrapIntoSourceCodeAnalysisExceptionIfNeeded(AnalysisExceptions.kt:27)
	at org.jetbrains.kotlin.fir.FirCliExceptionHandler.handleExceptionOnElementAnalysis(Utils.kt:176)
	at org.jetbrains.kotlin.fir.serialization.FirElementSerializer.functionProto(FirElementSerializer.kt:1591)
	at org.jetbrains.kotlin.fir.serialization.FirElementSerializer.classProto(FirElementSerializer.kt:211)
	at org.jetbrains.kotlin.fir.backend.jvm.FirMetadataSerializer.serialize(FirMetadataSerializer.kt:133)
	at org.jetbrains.kotlin.backend.jvm.codegen.ClassCodegen.generateKotlinMetadataAnnotation$lambda$16(ClassCodegen.kt:302)
	at org.jetbrains.kotlin.codegen.WriteAnnotationUtilKt.writeKotlinMetadata(writeAnnotationUtil.kt:48)
	at org.jetbrains.kotlin.backend.jvm.codegen.ClassCodegen.generateKotlinMetadataAnnotation(ClassCodegen.kt:300)
	at org.jetbrains.kotlin.backend.jvm.codegen.ClassCodegen.generate(ClassCodegen.kt:202)
	at org.jetbrains.kotlin.backend.jvm.FileCodegen.lower(JvmPhases.kt:41)
	at org.jetbrains.kotlin.backend.common.phaser.PhaseBuildersKt.makeIrFilePhase$lambda$5(PhaseBuilders.kt:114)
	at org.jetbrains.kotlin.backend.common.phaser.PhaseBuildersKt$createSimpleNamedCompilerPhase$1.phaseBody(PhaseBuilders.kt:71)
	at org.jetbrains.kotlin.backend.common.phaser.SimpleNamedCompilerPhase.phaseBody(CompilerPhase.kt:226)
	at org.jetbrains.kotlin.backend.common.phaser.AbstractNamedCompilerPhase.invoke(CompilerPhase.kt:113)
	at org.jetbrains.kotlin.backend.common.phaser.PerformByIrFilePhase.invokeSequential(performByIrFile.kt:62)
	... 43 more
Caused by: java.lang.IllegalStateException: Cannot serialize error type: ERROR CLASS: Inconsistent type: pe/com/master/machines/constants/http/Resource<kotlin/collections/List<pe/com/master/machines/model/model/Recipe>> (parameters.size = 0, arguments.size = 1)
	at org.jetbrains.kotlin.fir.serialization.FirSerializerExtension.serializeErrorType(FirSerializerExtension.kt:121)
	at org.jetbrains.kotlin.fir.backend.jvm.FirJvmSerializerExtension.serializeErrorType(FirJvmSerializerExtension.kt:316)
	at org.jetbrains.kotlin.fir.serialization.FirElementSerializer.typeOrTypealiasProto(FirElementSerializer.kt:903)
	at org.jetbrains.kotlin.fir.serialization.FirElementSerializer.typeProto(FirElementSerializer.kt:878)
	at org.jetbrains.kotlin.fir.serialization.FirElementSerializer.typeProto$default(FirElementSerializer.kt:872)
	at org.jetbrains.kotlin.fir.serialization.FirElementSerializer.typeArgument(FirElementSerializer.kt:1112)
	at org.jetbrains.kotlin.fir.serialization.FirElementSerializer.fillFromPossiblyInnerType(FirElementSerializer.kt:1069)
	at org.jetbrains.kotlin.fir.serialization.FirElementSerializer.fillFromPossiblyInnerType(FirElementSerializer.kt:1090)
	at org.jetbrains.kotlin.fir.serialization.FirElementSerializer.typeOrTypealiasProto(FirElementSerializer.kt:934)
	at org.jetbrains.kotlin.fir.serialization.FirElementSerializer.typeProto(FirElementSerializer.kt:878)
	at org.jetbrains.kotlin.fir.serialization.FirElementSerializer.typeProto$default(FirElementSerializer.kt:872)
	at org.jetbrains.kotlin.fir.serialization.FirElementSerializer.typeProto(FirElementSerializer.kt:869)
	at org.jetbrains.kotlin.fir.serialization.FirElementSerializer.functionProto(FirElementSerializer.kt:627)
	... 55 more


